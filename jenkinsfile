pipeline {
  agent any

  tools {
    nodejs "node"
  }

  parameters {
    string(name: 'container_name', defaultValue: 'pagina_web', description: 'Nombre del contenedor de docker.')
    string(name: 'image_name', defaultValue: 'pagina_img', description: 'Nombre de la imagen docker.')
    string(name: 'tag_image', defaultValue: 'lts', description: 'Tag de la imagen de la página.')
    string(name: 'container_port', defaultValue: '3000', description: 'Puerto que usa el contenedor (de tu app).')
    string(name: 'host_port', defaultValue: '80', description: 'Puerto que expondrá el contenedor en el host.')
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'develop', url: 'https://github.com/HamiltonStJJ/GestionDeVehiculosBack.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        sh 'npm install'
      }
    }

    stage('Run Tests') {
      steps {
        sh 'npm run test'
      }
    }

    stage('Build Application') {
      steps {
        sh 'npm run build'
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          try {
            sh "docker stop ${container_name} || true"
            sh "docker rm ${container_name} || true"
            sh "docker rmi ${image_name}:${tag_image} || true"
          } catch (Exception e) {
            echo "Ocurrió un error limpiando imágenes o contenedores antiguos: ${e}"
          }
        }

        sh "docker build -t ${image_name}:${tag_image} ."
      }
    }

    stage('Deploy Application') {
      steps {
        script {
          // Crear el archivo .env dinámicamente con todas las variables
          sh '''
            echo "URL_MONGODB=mongodb+srv://sharpblade:89MdbKg0KY5fZ0cL@gestiondevehiculosbd.ear3e.mongodb.net/?retryWrites=true&w=majority&appName=GestionDeVehiculosBD" > .env
            echo "PORT=3000" >> .env
            echo "HOST=http://localhost:3000" >> .env
            echo "CORREO=lopezedwin3binfo@gmail.com" >> .env
            echo "PASS_EMAIL=faqp mnzl pyeh hkmi" >> .env
            echo "ORIGIN=http://localhost:3001" >> .env
            echo "PAYPAL_CLIENT_ID=AaCizuisYc1p-7Po9frogysvANoze_O_TbMXVDHQgYoUX7DTdDvgWZnGMvK_QgIk4GnPQ1zgeWiIfXhq" >> .env
            echo "PAYPAL_CLIENT_SECRET=EAAI4g_AnbVjkzG672_DCG3-SYYaeOxQwD8mv73DH8ZrllQbN5ecbOMWhAmXn3cMG1MdighrFV2bL26G" >> .env
            echo "PAYPAL_API_URL=https://api-m.sandbox.paypal.com" >> .env
          '''

          // Desplegar el contenedor con el archivo .env
          sh """
            docker run -d --env-file .env -p ${host_port}:${container_port} --name ${container_name} ${image_name}:${tag_image}
          """
        }
      }
    }
  }

  post {
    always {
      echo 'Pipeline terminado.'
    }
    success {
      echo 'Pipeline completado exitosamente.'
    }
    failure {
      echo 'Pipeline fallido.'
    }
  }
}
